Excercises Abstract Classes and Templates

Excercise Abstract Classes

  A) Environment
     SHAPE_W

     UUT:
     shape.cpp

     Coverage:
     Statement

     UUTs & Stubs->Stub dependencies:
     All

     1) Test Cases getX:

     	a) getX.001:

	   shape:
	   <<GLOBAL>>:
       	   Shape Instance: vcast_concrete_Shape
       	   vcast_concrete_Shape::vcast_concrete_Shape( ... )
       	   x = 2, y = 3

       	   Shape::getX:
       	   return == 2

    	b) getX.002:

	   shape:
	   <<GLOBAL>>:
       	   Shape Instance: Rectangle
       	   Rectangle::Rectangle( )
       	   mX = 2, mY = 3

       	   Shape::getX:
       	   return == 2


Excercise Templates

  B) Environment
     STACK_W

     UUT:
     stack.cpp

     Coverage:
     Statement

     UUTs & Stubs->Stub dependencies:
     All

     Unit Appendix User Code:

     Stack<int> myStack(10);
     template class Stack<float>;


     1) Test Cases Stack<float>::push

     	a) Stack<float>::push.001:

       	stack:
       	<<GLOBAL>>:
       	Stack<float> Instance: Stack<float>
       	Stack<float>::Stack( ... ):
       	maxSize = 10
       	mStackCout == 1, mMaxSize == 10

       	Stack<float>::push:
       	item = 10.0


     2) Test Cases Stack<int>::push

     	a) Stack<int>::push.001:

       	   stack:
       	   <<GLOBAL>>:
       	   Stack<int> Instance: Stack<int>
       	   Stack<int>::Stack( ... ):
       	   maxSize = 10
       	   mStackCout == 1, mMaxSize == 10

       	   Stack<int>::push:
       	   item = 10

    	b) Stack<int>::push.002:

       	   stack:
       	   <<GLOBAL>>:
       	   Stack<int> Instance:
       	   Stack<int>::Stack( ... ):
       	   maxSize = 10
       	   mStackCout == 1,2 mMaxSize == 10

       	   Stack<int>::push:
	   item = 10,20

       	   Options->Display global data after: Each range iteration
